dist: bionic
language: csharp
mono: none
dotnet: 2.2.300

services:
  - docker

addons:
  sonarcloud:
    organization: isen-ng-github

branches:
  only:
    - master
    - /^v[0-9]+\.[0-9]+.[0-9]+(-.*)*$/

solution: testcontainers-dotnet.sln

install:
  - dotnet restore
  - dotnet tool install --global dotnet-sonarscanner

before_script:
  - export PATH="$PATH:$HOME/.dotnet/tools"

script:
  - if [ -n "$SONAR_TOKEN" ]; then dotnet sonarscanner begin /k:"testcontainers-dotnet" /o:"isen-ng-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$SONAR_TOKEN"; fi
  - dotnet build
  - if [ -n "$SONAR_TOKEN" ]; then dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"; fi
  - dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat='json%2copencover' /p:CoverletOutput=../bin/coverage/ /p:MergeWith='../bin/coverage/coverage.json'

after_success:
  - curl -s https://codecov.io/bash > codecov
  - chmod +x codecov
  - ./codecov -f "test/bin/coverage/coverage.opencover.xml"

deploy:
  - provider: script
    skip_cleanup: true
    script: ./remote-publish.sh $NUGET_API_KEY $NUGET_GALLERY_URL
    on:
      tags: true
      condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+.[0-9]+(-.*)*$
  - provider: script
    skip_cleanup: true
    script: ./remote-publish.sh $INTEGRATION_NUGET_API_KEY $INTEGRATION_NUGET_GALLERY_URL
    on:
      tags: true
      condition: $TRAVIS_TAG =~ ^test\/.+$

cache:
  directories:
    - '$HOME/.nuget/packages'
    - '$HOME/.local/share/NuGet/Cache'
    - '$HOME/.sonar/cache'
